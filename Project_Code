#include <SPI.h>
#include <MFRC522.h>
#include <Keypad.h>
#include <Servo.h>
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd (0x27, 16, 2);
Servo servo;
int servoPos = 0;
#define sensorPin1 A2
#define sensorPin2 A3
const int buzzerPin = A0;
int senVal1 = 0;
int senVal2 = 0;
#define RST_PIN 9
#define SS_PIN 10
int card1Balance = 4000;
int card2Balance = 200;
#define num 7
char Data[num];
byte data_count = 0;
String num1, num2, card, card2;
int a, b;
char Key;
bool recharge = true;
MFRC522 mfrc522(SS_PIN, RST_PIN);
int state = 0;
const byte ROWS = 4; //four rows
const byte COLS = 4; //four columns
char keys [ROWS][COLS] = {
{'1','2','3','A'},
{'4','5','6','B'},
{'7','8','9','C'},
{'*','0','#','D'}
};
byte rowPins[ROWS] = {0, 1, 2, 3}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {4, 5, 6, 7}; //connect to the column pinouts of the keypad
Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );
void setup() {
lcd.begin(16, 2);
lcd.init();
lcd.backlight();
Serial.begin(9600);
servo.attach(9);
servo.write(30);
pinMode(sensorPin1, INPUT);
pinMode(sensorPin2, INPUT);
pinMode(buzzerPin, OUTPUT);
SPI.begin();
mfrc522.PCD_Init ();
lcd.setCursor(0, 0);
lcd.print(" Automatic Toll");
lcd.setCursor(0, 1);
lcd.print("Collection System");
delay (3000);
lcd.clear();
}
void loop () {
if (recharge == 0) {
reCharge();
}
else {
lcd.setCursor(0, 0);
lcd.print(" Welcome");
sensorRead();
rfid();
KeyPad();
if (senVal1 == 1) {
servoDown();
lcd.clear();
lcd.setCursor(0, 0);
lcd.print("Vehicle Detected");
delay(1000);
lcd.clear();
lcd.setCursor(0, 0);
lcd.print("Put Your Card To");
delay(1000);
lcd.setCursor(0, 1);
lcd.print("The Reader......");
delay(2000);
lcd.clear();
}
else if (senVal2 == 1 && state == 1) {
servoUp();
lcd.clear();
lcd.setCursor(0, 0);
lcd.print("Have A Safe");
lcd.setCursor(0, 1);
lcd.print("Journey");
delay(1000);
lcd.clear();
state = 0;
}
}
}
void servoDown()
{
servo.attach(9);
for (servoPos = 30; servoPos <= 120; servoPos += 1)
{
servo.write(servoPos);
delay(5);
}
}
void servoUp()
{
servo.attach(9);
for (servoPos = 120; servoPos >= 30; servoPos -= 1)
{
servo.write(servoPos);
delay(5);
}
}
void sensorRead()
{
senVal1 = digitalRead(sensorPin1);
senVal2 = digitalRead(sensorPin2);
}
void rfid()
{
if ( ! mfrc522.PICC_IsNewCardPresent()) {
return;
}
if ( ! mfrc522.PICC_ReadCardSerial()) {
return;
}
// Play the buzzer for 1 second when an RFID card is scanned
playBuzzer(1000); // Duration: 1000 ms
Serial.print("UID: ");
for (byte i = 0; i < mfrc522.uid.size; i++)
{
Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
Serial.print(mfrc522.uid.uidByte[i], HEX);
}
String content = "";
for (byte i = 0; i < mfrc522.uid.size; i++)
{
content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
content.concat(String(mfrc522.uid.uidByte[i], HEX));
}
content.toUpperCase();
if (content.substring(1) == "63 A0 C6 0E")
{
if (card1Balance >= 500)
{
lcdPrint();
card1Balance = card1Balance - 500;
lcd.setCursor(9, 1);
lcd.print(card1Balance);
delay(2000);
lcd.clear();
state = 1;
}
else
{
card = content.substring(1);
LcdPrint();
lcd.setCursor(9, 1);
lcd.print(card1Balance);
lcd.print(" Tk");
delay(2000);
lcd.clear();
lcd.setCursor(0, 0);
lcd.print("Please Recharge");
delay(1000);
lcd.clear();
state = 0;
}
}
else if (content.substring(1) == "98 A6 E4 64")
{
if (card2Balance >= 500)
{
lcdPrint();
card2Balance = card2Balance - 500;
lcd.setCursor(9, 1);
lcd.print(card2Balance);
delay(2000);
lcd.clear();
state =1;
}
else
{
card = content.substring(1);
LcdPrint();
lcd.setCursor(9, 1);
lcd.print(card2Balance);
lcd.print(" Tk");
delay(2000);
lcd.clear();
lcd.setCursor(0, 0);
lcd.print("Please Recharge");
lcd.clear();
delay(1000);
state = 0;
}
}
else {
lcd.setCursor(0, 0);
lcd.print("Unknown Vehicle");
lcd.setCursor(0, 1);
lcd.print("Access denied");
delay(1500);
lcd.clear();
}
}
void KeyPad() {
char key = keypad.getKey();
if (key) {
if (key == 'A') {
lcd.clear();
lcd.setCursor(0, 0);
lcd.print("Recharging Mode.");
lcd.setCursor(0, 1);
lcd.print("................");
delay(1500);
lcd.clear();
recharge = 0;
}
}
}
void clearData()
{
while (data_count != 0)
{
Data[data_count--] = 0;
}
return;
}
void reCharge() {
lcd.setCursor(0, 0);
lcd.print ("Enter the amount");
char key = keypad.getKey();
if (key) {
if (key == 'D') {
if (card == "63 A0 C6 0") {
num1 = Data;
card1Balance = num1.toInt() + card1Balance;
lcd.clear();
lcd.setCursor(0, 0);
lcd.print("Your current");
lcd.setCursor(0, 1);
lcd.print("balance: ");
lcd.setCursor(9, 1);
lcd.print(card1Balance);
lcd.print(" Tk");
delay(3000);
clearData();
lcd.clear();
recharge = 1;
}
else if (card == "98 A6 E4 64") {
num2 = Data;
card2Balance = num2.toInt() + card2Balance;
lcd.clear();
lcd.setCursor(0, 0);
lcd.print("Your current");
lcd.setCursor(0, 1);
lcd.print("balance: ");
lcd.setCursor(9, 1);
lcd.print(card2Balance);
lcd.print(" Tk");
delay(3000);
clearData();
lcd.clear();
recharge = 1;
}
}
else {
Data[data_count] = key;
lcd.setCursor(data_count, 1);
lcd.print(Data[data_count]);
data_count++;
}
}
}
void lcdPrint()
{
delay(200);
delay(100);
lcd.clear();
lcd.setCursor(0, 0);
lcd.print(" Successfully");
lcd.setCursor(0, 1);
lcd.print(" paid your bill");
delay(1500);
lcd.clear();
lcd.setCursor(0, 0);
lcd.print("Your Remaining");
lcd.setCursor(0, 1);
lcd.print("balance: ");
}
void LcdPrint()
{
delay(200);
delay(100);
lcd.clear();
lcd.setCursor(0, 0);
lcd.print(" Your balance");
lcd.setCursor(0, 1);
lcd.print(" is insufficent");
delay(1500);
lcd.clear();
lcd.setCursor(0, 0);
lcd.print("Your Remaining");
lcd.setCursor(0, 1);
lcd.print("balance: ");
}
void playBuzzer(unsigned long duration) {
analogWrite(buzzerPin, 128); // Set the buzzer intensity
delay(duration); // Play the buzzer for the specified duration
analogWrite(buzzerPin, 0); // Turn off the buzzer
}
